
# # 在 GitHub Actions 工作流中，你可以通过定义多个步骤来执行不同的命令，并且可以使用 working-directory 参数来指定某个步骤应该在哪个目录下执行。
# name: cd-test

# on:
#     push:
#         branches: [main]
#     pull_request:
#         branches: [main]

# env:
#     SERVER_HOST: ${{ secrets.SERVER_HOST }}
#     USER_NAME: ${{ secrets.USER_NAME }}
#     SERVER_PASSWORD: ${{ secrets.PASSWORD }} # 或者使用 SERVER_PRIVATE_KEY，但处理方式会有所不同

# jobs:
#     build:
#         runs-on: ubuntu-latest
#         steps:
#             - name: checkout
#               uses: actions/checkout@main

#             - name: Setup PNPM
#               uses: pnpm/action-setup@v2
#               with:
#                 version: ^7.0

#             - name: Setup Node
#               uses: actions/setup-node@v3
#               with:
#                 node-version: 20.x
#                 cache: "pnpm"

#             # 在 app/server 目录中安装依赖并创建 .env 文件
#             - name: Install dependencies and create .env in app/server
#               working-directory: app/server
#               run: |
#                 pnpm i 
#                 echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env     
#               env:
#                 OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

#             - name: Deploy server
#               uses: appleboy/scp-action@master
#               with:
#                   source: "app/server/*"
#                   host: ${{ secrets.SERVER_HOST }}
#                   username: ${{ secrets.USER_NAME }}
#                   password: ${{ secrets.PASSWORD }}
#                   port: 22
#                   target: "/www/wwwroot/xq-ai/server/"

             

#             # 回到根目录并安装依赖、打包（如果有需要的话）
#             - name: Install dependencies and build in root directory
#               working-directory: ''
#               run: |
#                   pnpm i
                 
#               # 动态生成 .env 文件
#             - name: Create .env file
#               run: |
#                 echo "VITE_GLOB_API_URL=${{ secrets.VITE_GLOB_API_URL }}" > .env            
#               env:
#                 VITE_GLOB_API_URL: ${{ secrets.VITE_GLOB_API_URL }}
            
#              # 构建项目
#             - name: Build project
#               run:  pnpm build

#             - name: Deploy Web
#               uses: appleboy/scp-action@master
#               with:
#                   source: "dist/*" # 注意：这里的 dist 目录应该是根目录下的构建输出目录。
#                   host: ${{ secrets.SERVER_HOST }}
#                   username: ${{ secrets.USER_NAME }}
#                   password: ${{ secrets.PASSWORD }}
#                   port: 22
#                   target: "/www/wwwroot/wq.test/"


          
# uses: appleboy/scp-action@master 这一行表示 GitHub Actions 工作流将使用 appleboy/scp-action 仓库的 master 分支。这个 action 通常用于通过 SCP（Secure Copy Protocol）协议在远程服务器和 GitHub Actions 运行器之间安全地传输文件。
# uses: appleboy/ssh-action@master 这一行则表示工作流将使用 appleboy/ssh-action 仓库的 master 分支。这个 action 主要用于通过 SSH（Secure Shell）协议在远程服务器上执行命令。它允许你连接到远程服务器，并在其上运行任意的 shell 命令。